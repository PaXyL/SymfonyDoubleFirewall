security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\AdminUser:
            algorithm: auto
        App\Entity\User:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

        app_admin_user_provider:
            entity:
                class: App\Entity\AdminUser
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            switch_user: true
            context: admin
            pattern: "^/admin"
            lazy: true
            provider: app_admin_user_provider
            form_login:
                login_path: admin_login
                check_path: admin_login
                enable_csrf: true
            logout:
                path: admin_logout
        app:
            switch_user: { role: ROLE_ALLOWED_TO_SWITCH }
            context: app
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: login
                check_path: login
                enable_csrf: true
            logout:
                path: app_logout

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be user
    access_control:
         - { path: ^/, roles: PUBLIC_ACCESS }

         - { path: ^/admin/login, roles: PUBLIC_ACCESS }
         - { path: ^/admin, roles: ROLE_ADMIN }

         - { path: ^/profile, roles: ROLE_USER }
